//
//  CreateUserInterfaces.swift
//  Maniq
//
//  Created by Сергей Гаврилов on 02.02.2020.
//  Copyright (c) 2020 Сергей Гаврилов. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import FirebaseAuth

protocol CreateUserWireframeInterface: WireframeInterface {
    func removePreviousControllers()
}

protocol CreateUserViewInterface: ViewInterface {
    func loadingView(show: Bool)
    func userNameIsNotValid()
    func emainIsNotValid()
    func passwordIsNotValid()
    func passwordIsNotEqual()
}

protocol CreateUserPresenterInterface: PresenterInterface {
    func createUser(name: String, email: String, password: String, isMaster: Bool)
    func removePreviousControllers()
    func isValid(userName: String) -> Bool
    func isValid(email: String) -> Bool
    func isValid(password: String) -> Bool
    func isEqual(password: String, repeatPassword: String) -> Bool
}

protocol CreateUserInteractorInterface: InteractorInterface {
    func createUser(name: String, email: String, password: String, isMaster: Bool, completionHandler: @escaping (AuthDataResult?, Error?) -> ())
    func createUserDB(uid: String, name: String, phoneNumber: String, email: String, isMaster: Bool, completionHandler: @escaping (Error?) -> ())
    func isValid(userName: String) -> Bool
    func isValid(email: String) -> Bool
    func isValid(password: String) -> Bool
    func isEqual(password: String, repeatPassword: String) -> Bool
}
