//
//  CreateUserPresenter.swift
//  Maniq
//
//  Created by –°–µ—Ä–≥–µ–π –ì–∞–≤—Ä–∏–ª–æ–≤ on 02.02.2020.
//  Copyright (c) 2020 –°–µ—Ä–≥–µ–π –ì–∞–≤—Ä–∏–ª–æ–≤. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class CreateUserPresenter {

    // MARK: - Private properties -

    private unowned let view: CreateUserViewInterface
    private let interactor: CreateUserInteractorInterface
    private let wireframe: CreateUserWireframeInterface

    // MARK: - Lifecycle -

    init(view: CreateUserViewInterface, interactor: CreateUserInteractorInterface, wireframe: CreateUserWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
    
    private func createUserDB(uid: String, name: String, email: String, isMaster: Bool) {
        let phoneNumber = CurrentState.shared.phoneNumber!
        interactor.createUserDB(uid: uid, name: name, phoneNumber: phoneNumber, email: email, isMaster: isMaster) { error in
            if let error = error {
                self.view.loadingView(show: false)
                self.wireframe.showErrorAlert(with: error.localizedDescription)
                return
            }
            print("nice!")
            self.wireframe.dismiss(animated: true)
        }
    }
}

// MARK: - Extensions -

extension CreateUserPresenter: CreateUserPresenterInterface {
    func removePreviousControllers() {
        wireframe.removePreviousControllers()
    }
    
    func createUser(name: String, email: String, password: String, isMaster: Bool) {
        view.loadingView(show: true)
        interactor.createUser(name: name, email: email, password: password, isMaster: isMaster) { result, error in
            if let error = error {
                self.view.loadingView(show: false)
                self.wireframe.showErrorAlert(with: error.localizedDescription)
                return
            }
            self.createUserDB(uid: result!.user.uid, name: name, email: email, isMaster: isMaster)
        }
    }
}
